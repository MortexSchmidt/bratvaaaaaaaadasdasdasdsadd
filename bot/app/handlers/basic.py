from __future__ import annotations
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart, Command

router = Router(name="basic")

@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer("—Å–∞–ª–∞–º –ø–æ–ø–æ–ª–∞–º —è —Ö—É–µ–≥–ª–æ—Ç–∫–∞")

HELP_SECTIONS = {
    "main": {
        "title": "üìö <b>–ü–æ–º–æ—â—å ‚Äî –û–±–∑–æ—Ä</b>",
        "text": (
            "<b>‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b> –≠—Ç–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É.\n\n"
            "<b>‚ö° –°–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ:</b>\n"
            "‚Ä¢ <b>/profile</b> ‚Äî —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å (—É—Ä–æ–≤–µ–Ω—å, –º–æ–Ω–µ—Ç—ã, ELO, —Ç–∏—Ç—É–ª, —Å—Ç—Ä–∏–∫)\n"
            "‚Ä¢ <b>/–¥—Ä–æ—á–∫–∞</b> ‚Äî –µ–∂–µ–¥–Ω–µ–≤–∫–∞ (—è–¥—Ä–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞)\n"
            "‚Ä¢ <b>/daily</b> ‚Äî –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–≤–µ—Å—Ç | <b>/week</b> ‚Äî –æ–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ–¥–µ–ª–∏\n"
            "‚Ä¢ <b>/recover</b> ‚Äî –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–∞—Å—Ç—å —Å–ª–æ–º–∞–Ω–Ω–æ–≥–æ —Å—Ç—Ä–∏–∫–∞ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)\n"
            "‚Ä¢ <b>/top_elo</b> | <b>/top_level</b> ‚Äî —Ä–µ–π—Ç–∏–Ω–≥–∏\n"
            "‚Ä¢ <b>/shop</b> / <b>/buy</b> ‚Äî –º–∞–≥–∞–∑–∏–Ω –∏ –ø–æ–∫—É–ø–∫–∞\n"
            "‚Ä¢ <b>/titles</b> / <b>/equip</b> ‚Äî —Ç–∏—Ç—É–ª—ã –∏ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∞ (/equip &lt;—Ç–æ—á–Ω–æ–µ–ù–∞–∑–≤–∞–Ω–∏–µ–¢–∏—Ç—É–ª–∞&gt;)\n"
            "‚Ä¢ <b>/notify_on</b> / <b>/notify_off</b> ‚Äî –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\n"
            "‚Ä¢ <b>/truth</b> / <b>/tod</b> ‚Äî –ü—Ä–∞–≤–¥–∞/–î–µ–π—Å—Ç–≤–∏–µ\n"
            "‚Ä¢ <b>/tictactoe</b> ‚Äî –∏–≥—Ä–∞ —Å ELO\n\n"
            "<b>üóÇ –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å–Ω–∏–∑—É:</b> –ü—Ä–æ—Ñ–∏–ª—å ‚Ä¢ –î—Ä–æ—á–∫–∞ ‚Ä¢ –ü/–î ‚Ä¢ –ò–≥—Ä—ã ‚Ä¢ –ú–∞—Ñ–∏—è ‚Ä¢ –ê–¥–º–∏–Ω" )
    },
    "profile": {
        "title": "üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å / –≠–∫–æ–Ω–æ–º–∏–∫–∞</b>",
        "text": (
            "<b>/profile</b> ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: <i>LVL ‚Ä¢ XP ‚Ä¢ –ú–æ–Ω–µ—Ç—ã ‚Ä¢ –¢–µ–∫—É—â–∏–π/–ú–∞–∫—Å —Å—Ç—Ä–∏–∫ ‚Ä¢ –í—Å–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π ‚Ä¢ –ü–∏—Ç–æ–º–µ—Ü ‚Ä¢ ELO ‚Ä¢ –°—Ç–∞—Ç—É—Å ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–π —Ç–∏—Ç—É–ª</i>.\n"
            "<b>üî¢ –£—Ä–æ–≤–µ–Ω—å:</b> sqrt(xp/10) (–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ—Å—Ç–∞—è —Ñ–æ—Ä–º—É–ª–∞).\n"
            "<b>üß¨ XP:</b> +1 –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–∫—É, +2 –±–æ–Ω—É—Å –Ω–∞ –∫–∞–∂–¥–æ–º –∫—Ä–∞—Ç–Ω–æ–º 10 —Å—Ç—Ä–∏–∫–µ (+3 –∏—Ç–æ–≥–æ).\n"
            "<b>üí∞ –ú–æ–Ω–µ—Ç—ã:</b> –±–∞–∑–æ–≤–æ 1 –Ω–∞ –∫—Ä–∞—Ç–Ω—ã—Ö 10 —Å—Ç—Ä–∏–∫–∞—Ö + –º–Ω–æ–∂–∏—Ç–µ–ª—å —Å–µ—Ä–∏–∏: (—Å—Ç—Ä–∏–∫ // 7).\n"
            "<b>üè∑ –¢–∏—Ç—É–ª—ã:</b> –¥–∞—é—Ç —Å—Ç–∏–ª—å, –ø–æ–ª—É—á–∞—é—Çc—è –∑–∞ –∞—á–∏–≤–∫–∏ –∏–ª–∏ –≤ /shop. /titles —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, /equip &lt;–Ω–∞–∑–≤–∞–Ω–∏–µ&gt;.\n"
            "<b>üìù /set_status</b> ‚Äî —Å—Ç–∞—Ç—É—Å (–¥–æ 60 —Å–∏–º–≤–æ–ª–æ–≤).\n"
            "<b>üêæ /–ø–∏—Ç–æ–º–µ—Ü –ò–º—è</b> ‚Äî –∏–º—è '–î—Ä–æ—á–∏–∫–∞'.\n"
            "<b>‚ôª /recover:</b> –ø–æ–ª–æ–≤–∏–Ω–∞ —Å—Ç–∞—Ä–æ–≥–æ —Å—Ç—Ä–∏–∫–∞ (–µ—Å–ª–∏ –±—ã–ª ‚â•10 –∏ —Å–ª–æ–º–∞–ª—Å—è). –û–∫–Ω–æ ~48—á." )
    },
    "drochka": {
        "title": "üî• <b>–ï–∂–µ–¥–Ω–µ–≤–∫–∞ (–î—Ä–æ—á–∫–∞)</b>",
        "text": (
            "<b>/–¥—Ä–æ—á–∫–∞</b> –∏–ª–∏ —Å–ª–æ–≤–æ '–¥—Ä–æ—á' ‚Äî 1 —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ –ø–æ —Ç–∞–π–º–∑–æ–Ω–µ (Europe/Kyiv).\n"
            "<b>üïõ –†–µ—Å–µ—Ç:</b> –≤ 00:00; –Ω–æ –≥–∏–±–∫–æ–µ –æ–∫–Ω–æ: –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ >34—á ‚Äî —Å—Ç—Ä–∏–∫ —Å–ª–æ–º–∞–µ—Ç—Å—è.\n"
            "<b>üèÖ –ê—á–∏–≤–∫–∏ —Å—Ç—Ä–∏–∫–∞:</b> 5, 10, 30, 50, 100, 365 (—Å —Ç–∏—Ç—É–ª–∞–º–∏).\n"
            "<b>üíØ –ê—á–∏–≤–∫–∏ —Å—É–º–º–∞—Ä–Ω–æ:</b> 1000, 5000.\n"
            "<b>üéØ /daily:</b> –∫–≤–µ—Å—Ç (–ø–æ–∫–∞ –±–∞–∑–æ–≤—ã–π) ‚Äî –¥–æ–ø. XP/–º–æ–Ω–µ—Ç—ã.\n"
            "<b>üåê /week:</b> –æ–±—â–∏–π –∫–æ–º–∞–Ω–¥–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ–¥–µ–ª–∏.\n"
            "<b>‚ôª –°–ª–æ–º–∞–ª–æ—Å—å?</b> /recover –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ (—á–∞—Å—Ç—å —Å—Ç—Ä–∏–∫–∞).\n"
            "<b>üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:</b> /notify_on —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—ã—Ç—å.\n"
            "<b>üí° –°–æ–≤–µ—Ç:</b> –¥–µ—Ä–∂–∏ —Å–µ—Ä–∏—é —Ä–∞–¥–∏ –º–Ω–æ–∂–∏—Ç–µ–ª—è –º–æ–Ω–µ—Ç –∏ —Ç–∏—Ç—É–ª–æ–≤." )
    },
    "tod": {
        "title": "üé≠ <b>–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –î–µ–π—Å—Ç–≤–∏–µ</b>",
        "text": (
            "<b>/truth</b> / <b>/tod</b> ‚Äî —Å–æ–∑–¥–∞—Ç—å –ª–æ–±–±–∏.\n"
            "<b>‚öô –†–µ–∂–∏–º—ã:</b> –ü–æ –∫—Ä—É–≥—É ‚è± / –ö–æ–º—É —É–≥–æ–¥–Ω–æ üéØ.\n"
            "<b>üìè –ü—Ä–∞–≤–∏–ª–∞:</b> 1 –ø–∞—Å –∏–ª–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ.\n"
            "<b>üïµ –¶–µ–ª—å</b> –≤ —Ä–µ–∂–∏–º–µ –ø–æ –∫—Ä—É–≥—É —Å–∞–º–∞ –≤—ã–±–∏—Ä–∞–µ—Ç —Ç–∏–ø.\n"
            "<b>ü§´ –°–µ–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è:</b> —Å–ø—Ä–∞—à–∏–≤–∞—é—â–∏–π –ø–∏—à–µ—Ç –≤ –õ–° ‚Üí —Ü–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –≤ –õ–° ‚Üí –∂–º—ë—Ç '–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ'.\n"
            "<b>üîö –ó–∞–≤–µ—Ä—à–∏—Ç—å:</b> –∫–Ω–æ–ø–∫–∞ –∏–ª–∏ /end_tod.\n"
            "<b>üé≤ Random:</b> —Å–ª—É—á–∞–π–Ω–æ –ü—Ä–∞–≤–¥–∞/–î–µ–π—Å—Ç–≤–∏–µ." )
    },
    "games": {
        "title": "üéÆ <b>–ò–≥—Ä—ã</b>",
        "text": (
            "<b>/tictactoe</b> ‚Äî –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏ c ELO (—Å—Ç–∞—Ä—Ç 1000).\n"
            "<b>/top_elo</b> ‚Äî —Ç–æ–ø –ø–æ ELO, <b>/top_level</b> ‚Äî —Ç–æ–ø —É—Ä–æ–≤–Ω–µ–π.\n"
            "<b>ELO:</b> –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º—É–ª–∞ –æ–∂–∏–¥–∞–Ω–∏—è + K=32 (–ø—Ä–∏–º–µ—Ä–Ω–æ).\n"
            "üìå –ü–ª–∞–Ω: –±–æ–ª—å—à–µ –º–∏–Ω–∏-–∏–≥—Ä, –±—É—Å—Ç–µ—Ä—ã XP, —Å–µ–∑–æ–Ω–Ω—ã–µ —Å–±—Ä–æ—Å—ã." )
    },
    "mafia": {
        "title": "üïµÔ∏è <b>–ú–∞—Ñ–∏—è (–ë–∞–∑–æ–≤–æ)</b>",
        "text": (
            "<b>/mafia_start</b> ‚Äî —Å–æ–∑–¥–∞—Ç—å\n<b>/join_mafia</b> ‚Äî –≤—Å—Ç—É–ø–∏—Ç—å\n<b>/start_game_mafia</b> ‚Äî —Å—Ç–∞—Ä—Ç\n"
            "<b>/vote</b> @user ‚Äî –≥–æ–ª–æ—Å –¥–Ω—ë–º\n<b>/kill_mafia</b> @user ‚Äî –º–∞—Ñ–∏—è –Ω–æ—á—å—é\n<b>/heal_mafia</b> @user ‚Äî –¥–æ–∫—Ç–æ—Ä\n<b>/check_mafia</b> @user ‚Äî –¥–µ—Ç–µ–∫—Ç–∏–≤\n"
            "–î–∞–ª—å—à–µ: —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ä–æ–ª–µ–π, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è XP/–º–æ–Ω–µ—Ç, —Å–µ–∑–æ–Ω–Ω—ã–µ —Å—Ç–∞—Ç—ã." )
    },
    "admin": {
        "title": "üõ† <b>–ê–¥–º–∏–Ω / –¢–µ—Ö</b>",
        "text": (
            "<b>/refresh_commands</b> ‚Äî –æ–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é.\n"
            "<b>/broadcast</b> &lt;—Ç–µ–∫—Å—Ç&gt; ‚Äî —Ä–∞—Å—Å—ã–ª–∫–∞.\n"
            "<b>–õ–æ–≥–∏:</b> events (–¥–µ–π—Å—Ç–≤–∏—è: –ø–æ–∫—É–ø–∫–∏, –∞—á–∏–≤–∫–∏, –¥—Ä–æ—á–∫–∞ –∏ —Ç.–ø.)\n"
            "<b>ENV:</b> BOT_TOKEN ‚Ä¢ TIMEZONE ‚Ä¢ DB_DIR.\n"
            "<b>–ë–î —Ç–∞–±–ª–∏—Ü—ã:</b> user_stats, user_achievements, user_titles, daily_quests, weekly_progress, weekly_participants, user_prefs, events.\n"
            "–ü–ª–∞–Ω—ã: –∞–≤—Ç–æ-–≤—ã–¥–∞—á–∞ –Ω–∞–≥—Ä–∞–¥ –Ω–µ–¥–µ–ª–∏, –∫—Ä–æ–Ω—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤." )
    },
}

def build_help_keyboard(active_key: str) -> InlineKeyboardMarkup:
    buttons = []
    row1 = [
        InlineKeyboardButton(text=("üìö" if active_key=="main" else "–ú–µ–Ω—é"), callback_data="help:sec:main"),
        InlineKeyboardButton(text=("üë§" if active_key=="profile" else "–ü—Ä–æ—Ñ–∏–ª—å"), callback_data="help:sec:profile"),
        InlineKeyboardButton(text=("üî•" if active_key=="drochka" else "–î—Ä–æ—á–∫–∞"), callback_data="help:sec:drochka"),
    ]
    row2 = [
        InlineKeyboardButton(text=("üé≠" if active_key=="tod" else "–ü/–î"), callback_data="help:sec:tod"),
        InlineKeyboardButton(text=("üéÆ" if active_key=="games" else "–ò–≥—Ä—ã"), callback_data="help:sec:games"),
        InlineKeyboardButton(text=("üïµÔ∏è" if active_key=="mafia" else "–ú–∞—Ñ–∏—è"), callback_data="help:sec:mafia"),
    ]
    row3 = [
        InlineKeyboardButton(text=("üõ†" if active_key=="admin" else "–ê–¥–º–∏–Ω"), callback_data="help:sec:admin"),
        InlineKeyboardButton(text="‚úñ –ó–∞–∫—Ä—ã—Ç—å", callback_data="help:close"),
    ]
    buttons.extend([row1,row2,row3])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def render_help_section(key: str) -> str:
    sec = HELP_SECTIONS.get(key, HELP_SECTIONS['main'])
    return f"{sec['title']}\n\n{sec['text']}"

@router.message(Command(commands=["help"]))
async def cmd_help(message: Message):
    text = render_help_section('main')
    await message.answer(text, parse_mode="HTML", reply_markup=build_help_keyboard('main'))

@router.callback_query(F.data.startswith("help:"))
async def help_callbacks(cb: CallbackQuery):
    if not cb.data:
        return await cb.answer()
    parts = cb.data.split(":")
    if len(parts) < 2:
        return await cb.answer()
    action = parts[1]
    if action == 'close':
        try:
            await cb.message.edit_text("–ó–∞–∫—Ä—ã—Ç–æ.")
        except Exception:
            pass
        return await cb.answer("–ó–∞–∫—Ä—ã—Ç–æ")
    if action == 'sec':
        if len(parts) < 3:
            return await cb.answer()
        key = parts[2]
        text = render_help_section(key)
        try:
            await cb.message.edit_text(text, parse_mode="HTML", reply_markup=build_help_keyboard(key))
        except Exception:
            # fallback –æ—Ç–ø—Ä–∞–≤–∏–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await cb.message.answer(text, parse_mode="HTML", reply_markup=build_help_keyboard(key))
        return await cb.answer()
    await cb.answer()

@router.message(Command(commands=["ping"]))
async def cmd_ping(message: Message):
    await message.answer("pong")

@router.message(Command(commands=["whoami", "id"]))
async def cmd_whoami(message: Message):
    user = message.from_user
    chat = message.chat
    await message.answer(
        f"<b>User ID:</b> <code>{user.id}</code>\n" \
        f"<b>Chat ID:</b> <code>{chat.id}</code>\n" \
        f"–¢–∏–ø —á–∞—Ç–∞: {chat.type}\n" \
        "–ï—Å–ª–∏ –±–æ—Ç –Ω–µ –ª–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ ‚Äî –æ—Ç–∫–ª—é—á–∏ privacy —É BotFather."
    )

@router.message(Command(commands=["echo"]))
async def cmd_echo(message: Message):
    # —É–¥–∞–ª—è–µ–º —Å–∞–º—É –∫–æ–º–∞–Ω–¥—É
    text = message.text.split(maxsplit=1)
    if len(text) < 2:
        await message.answer("–ù—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–µ–∫—Å—Ç: /echo <—Ç–µ–∫—Å—Ç>")
    else:
        await message.answer(text[1])

@router.message(F.text.contains("–±–æ—Ç"))
async def mention_react(message: Message):
    if message.from_user and not message.from_user.is_bot:
        try:
            # Get all chat members and mention them
            if message.chat.type in {"group", "supergroup"}:
                members = []
                async for member in message.bot.get_chat_members(message.chat.id):
                    members.append(member.user.id)
                mentions = " ".join([f"<a href='tg://user?id={user_id}'>‚Äå</a>" for user_id in members])
                await message.reply(f"—Å—É–∫–∞ –±—ã—Å—Ç—Ä–µ–µ –≤—Å–µ —Å—é–¥–∞ –Ω–∞—Ö—É–π{mentions}", parse_mode="HTML")
            else:
                await message.reply("—Å—É–∫–∞ –±—ã—Å—Ç—Ä–µ–µ –≤—Å–µ —Å—é–¥–∞ –Ω–∞—Ö—É–π")
        except Exception:
            # Fallback to @all
            await message.reply("—Å—É–∫–∞ –±—ã—Å—Ç—Ä–µ–µ –≤—Å–µ —Å—é–¥–∞ –Ω–∞—Ö—É–π @all")
