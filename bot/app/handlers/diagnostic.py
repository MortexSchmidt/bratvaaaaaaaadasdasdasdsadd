from __future__ import annotations
import os, logging
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command

router = Router(name="diagnostic")

@router.message(Command(commands=["_ping","_diag"]))
async def cmd_diag(message: Message):
    safe_env = {}
    for k in ("TIMEZONE","DB_DIR"):
        if k in os.environ:
            safe_env[k] = os.environ[k]
    text = ["ü©∫ DIAG", f"chat={message.chat.id}", f"user={message.from_user.id}"]
    text.append(f"env={safe_env}")
    text.append("–ï—Å–ª–∏ –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã –º–æ–ª—á–∞—Ç, –∑–Ω–∞—á–∏—Ç update –Ω–µ –¥–æ—Ö–æ–¥–∏—Ç –¥–æ –Ω—É–∂–Ω–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞ –∏–ª–∏ –±–æ—Ç –Ω–µ –≤–∏–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.")
    await message.answer("\n".join(text))

# Fallback –¥–ª—è –ª—é–±—ã—Ö –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
@router.message()
async def fallback(message: Message):
    if message.text and message.text.startswith('/'):
        # –£–∂–µ —Ä–∞–∑–æ–±—Ä–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω—ã —Ä–∞–Ω—å—à–µ; –µ—Å–ª–∏ –º—ã —Ç—É—Ç ‚Äî –∑–Ω–∞—á–∏—Ç —Ö–µ–Ω–¥–ª–µ—Ä–∞ –Ω–µ—Ç
        await message.answer(f"‚Åâ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {message.text}\n–ü–æ–ø—Ä–æ–±—É–π /help –∏–ª–∏ /_diag")
        logging.getLogger("fallback").info("Unknown command seen: %s", message.text)
